(window.webpackJsonp=window.webpackJsonp||[]).push([[22,32,39,68,147],{59:function(e,t,s){"use strict";s.r(t),s.d(t,"mapNamespacesResponse",(function(){return l}));const l=e=>e&&e.data?e.data.results.bindings.map(e=>({prefix:e.prefix.value,uri:e.namespace.value})):[]},62:function(e,t,s){"use strict";s.r(t),s.d(t,"mapAclRulesResponse",(function(){return o}));var l=s(63);const o=e=>{const t=new l.ACListModel;return e&&e.data&&e.data.forEach(e=>{t.appendNewRule(e.subject,e.predicate,e.object,e.context,e.role,e.policy)}),t}},63:function(e,t,s){"use strict";s.r(t),s.d(t,"ACListModel",(function(){return l})),s.d(t,"ACRuleModel",(function(){return o})),s.d(t,"ACL_POLICY",(function(){return n}));class l{constructor(e=[]){this._aclRules=e}size(){return this.aclRules.length}appendNewRule(e,t,s,l,n,r){this.aclRules.push(new o(e,t,s,l,n,r))}addRule(e){this.aclRules.splice(e,0,new o)}removeRule(e){this.aclRules.splice(e,1)}replaceRule(e,t){this.aclRules.splice(e,1,t)}getRule(e){return this.aclRules[e]}isRuleDuplicated(e){const t=this.aclRules[e];return this.aclRules.some((s,l)=>e!==l&&angular.equals(t,s))}getRuleCopy(e){const t=this.aclRules[e];return{subject:t.subject,predicate:t.predicate,object:t.object,context:t.context,role:t.role,policy:t.policy}}moveUp(e){const t=this.aclRules[e-1];this.aclRules[e-1]=this.aclRules[e],this.aclRules[e]=t}moveDown(e){const t=this.aclRules[e+1];this.aclRules[e+1]=this.aclRules[e],this.aclRules[e]=t}toJSON(){return this.aclRules.map(e=>({subject:e.subject,predicate:e.predicate,object:e.object,context:e.context,role:e.role,policy:e.policy}))}get aclRules(){return this._aclRules}set aclRules(e){this._aclRules=e}}class o{constructor(e="*",t="*",s="*",l="*",o="CUSTOM_",r=n.ALLOW){this._subject=e,this._predicate=t,this._object=s,this._context=l,this._role=o,this._policy=r}get subject(){return this._subject}set subject(e){this._subject=e}get predicate(){return this._predicate}set predicate(e){this._predicate=e}get object(){return this._object}set object(e){this._object=e}get context(){return this._context}set context(e){this._context=e}get role(){return this._role}set role(e){this._role=e}get policy(){return this._policy}set policy(e){this._policy=e}}const n={ALLOW:"allow",DENY:"deny"}},76:function(e,t,s){"use strict";s.r(t);s(62);angular.module("graphdb.framework.rest.aclmanagement.service",[]).factory("AclManagementRestService",l),l.$inject=["$http"];function l(e){return{getAcl:function(t){return e.get(`rest/repositories/${t}/acl`)},updateAcl:function(t,s){return e.put(`rest/repositories/${t}/acl`,s)}}}},80:function(e,t,s){"use strict";s.r(t);s(30),s(76);var l=s(62),o=s(74),n=s(59);function r(e,t,s,r,c,a,i,u,d){e.contextValue=void 0;const p=[];e.ruleData={},e.loading=!1,e.namespaces=[],e.rulesModel=void 0,e.rulesModelCopy=void 0,e.selectedRule=void 0,e.editedRuleIndex=void 0,e.editedRuleCopy=void 0,e.isNewRule=!1,e.modelIsDirty=!1,e.addRule=t=>{e.rulesModel.addRule(t),e.editedRuleIndex=t,e.isNewRule=!0,v()},e.editRule=t=>{e.editedRuleIndex=t,e.isNewRule=!1,e.editedRuleCopy=e.rulesModel.getRuleCopy(t),v()},e.deleteRule=t=>{i.openConfirmation(a.instant("common.confirm"),a.instant("acl_management.rulestable.messages.delete_rule_confirmation",{index:t}),()=>{e.rulesModel.removeRule(t),v()})},e.saveRule=()=>{e.rulesModel.isRuleDuplicated(e.editedRuleIndex)?b():(e.editedRuleIndex=void 0,e.isNewRule=!1,v())},e.cancelEditing=t=>{e.isNewRule?(e.rulesModel.removeRule(t),e.isNewRule=!1):(e.rulesModel.replaceRule(t,e.editedRuleCopy),e.editedRuleCopy=void 0),e.editedRuleIndex=void 0,v()},e.moveUp=t=>{e.rulesModel.moveUp(t),e.selectedRule=t-1,v()},e.moveDown=t=>{e.rulesModel.moveDown(t),e.selectedRule=t+1,v()},e.saveAcl=()=>{e.loading=!0,R().then(m).catch(e=>{const t=getError(e);s.error(t,a.instant("acl_management.errors.updating_rules"))}).finally(()=>{e.loading=!1})},e.cancelAclSave=()=>{i.openConfirmation(a.instant("common.confirm"),a.instant("acl_management.rulestable.messages.revert_acl_list"),()=>{h(),s.success(a.instant("acl_management.rulestable.messages.rules_reverted"))})};const m=()=>{const t=_();return r.getAcl(t).then(t=>{e.rulesModel=Object(l.mapAclRulesResponse)(t),e.rulesModelCopy=Object(l.mapAclRulesResponse)(t),v()}).catch(e=>{const t=getError(e);s.error(t,a.instant("acl_management.errors.loading_rules"))})},R=()=>{const t=_();return r.updateAcl(t,e.rulesModel.toJSON()).then(()=>{s.success(a.instant("acl_management.rulestable.messages.rules_updated"))})},h=()=>{_()&&(e.loading=!0,m().finally(()=>{e.loading=!1}))},g=()=>{h(),e.editedRuleIndex=void 0,e.modelIsDirty=!1,e.editedRuleCopy=void 0},v=()=>{e.modelIsDirty=!Object(o.isEqual)(e.rulesModel,e.rulesModelCopy)},_=()=>c.getActiveRepository(),b=()=>{s.error(a.instant("acl_management.errors.duplicated_rules"))},f=t=>{e.modelIsDirty&&(t.returnValue=!0)},y=()=>{window.removeEventListener("beforeunload",f),p.forEach(e=>e())},w=(s,l)=>{e.modelIsDirty&&(s.preventDefault(),i.openSimpleModal({title:a.instant("common.confirm"),message:a.instant("acl_management.rulestable.messages.unsaved_changes_confirmation"),warning:!0}).result.then((function(){y();const e=t.absUrl().length-t.url().length,s=l.substring(e);t.path(s)}),(function(){})))},j=()=>{e.getAutocompletePromise=d.checkAutocompleteStatus()};u.getNamespaces(c.getActiveRepository()).then(n.mapNamespacesResponse).then(t=>{e.namespaces=t}).catch(e=>{const t=getError(e);s.error(t,a.instant("error.getting.namespaces.for.repo"))}),p.push(e.$on("autocompleteStatus",j)),p.push(e.$watch(_,g)),p.push(e.$on("$locationChangeStart",w)),p.push(e.$on("$destroy",y)),window.addEventListener("beforeunload",f)}angular.module("graphdb.framework.aclmanagement.controllers",["graphdb.framework.rest.plugins.service","graphdb.framework.rest.aclmanagement.service"]).controller("AclManagementCtrl",r),r.$inject=["$scope","$location","toastr","AclManagementRestService","$repositories","$translate","ModalService","RDF4JRepositoriesRestService","AutocompleteRestService"]}}]);