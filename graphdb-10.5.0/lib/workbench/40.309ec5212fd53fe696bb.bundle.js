(window.webpackJsonp=window.webpackJsonp||[]).push([[40,147],{59:function(e,t,o){"use strict";o.r(t),o.d(t,"mapNamespacesResponse",(function(){return n}));const n=e=>e&&e.data?e.data.results.bindings.map(e=>({prefix:e.prefix.value,uri:e.namespace.value})):[]},81:function(e,t,o){"use strict";o.r(t);o(32);var n=o(59),r=o(0);function i(e,t,o,i,c,a,s,u,l,d,f,p){let g;function m(){g&&t.cancel(g)}e.pluginName="autocomplete",e.setPluginIsActive=function(t){e.pluginIsActive=t};const b=function(){d.checkAutocompleteStatus().success((function(t){e.autocompleteEnabled=t,f.setAutocompleteStatus(t)})).error((function(e){o.error(getError(e))}))},I=function(){d.refreshIndexIRIs().success((function(t){e.shouldIndexIRIs=t})).error((function(e){o.error(getError(e))}))},L=function(){d.refreshIndexStatus().success((function(t){e.indexStatus=t})).error((function(e){o.error(getError(e))}))},v=function(){d.refreshLabelConfig().success((function(t){e.labelConfig=t})).error((function(e){o.error(getError(e))}))};e.checkForPlugin=function(){e.pluginFound=!1,e.setLoader(!0),d.checkForPlugin().success((function(t){e.pluginFound=!0===t,e.pluginFound?(h(),b(),I(),L(),v()):(e.autocompleteEnabled=!1,e.loading=!1)})).error((function(e){o.error(getError(e))})).finally((function(){e.setLoader(!1)}))};const R=function(){g=t((function(){e.$broadcast("checkIsActive"),e.autocompleteEnabled&&L()}),5e3)};e.$on("$destroy",(function(){m()}));e.setLoader=function(t,o){s.cancel(e.loaderTimeout),t?e.loaderTimeout=s((function(){e.loader=t,e.loaderMessage=o}),300):e.loader=!1},e.getLoaderMessage=function(){return e.loaderMessage||p.instant("common.loading")},e.toggleAutocomplete=function(){const t=!e.autocompleteEnabled;e.setLoader(!0,t?p.instant("autocomplete.enabling"):p.instant("autocomplete.disabling")),d.toggleAutocomplete(t).success((function(){b(),L()})).error((function(e){o.error(getError(e))})).finally((function(){e.setLoader(!1)}))},e.toggleIndexIRIs=function(){e.setLoader(!0,p.instant("autocomplete.index.iri")),d.toggleIndexIRIs(!e.shouldIndexIRIs).success((function(){I(),L()})).error((function(e){o.error(getError(e))})).finally((function(){e.setLoader(!1)}))},e.buildIndex=function(){e.setLoader(!0,p.instant("autocomplete.index.build")),d.buildIndex().success((function(){e.indexStatus="BUILDING"})).error((function(e){o.error(getError(e))})).finally((function(){e.setLoader(!1)}))},e.interruptIndexing=function(){e.setLoader(!0,p.instant("index.interrupt")),d.interruptIndexing().success((function(){L()})).error((function(e){o.error(getError(e))})).finally((function(){e.setLoader(!1)}))},e.getDegradedReason=function(){return i.getDegradedReason()},e.addLabel=function(){e.editLabel({labelIri:"",languages:""},!0)},e.editLabel=function(t,n){a.open({templateUrl:"js/angular/autocomplete/templates/modal/add-label.html",controller:"AddLabelCtrl",resolve:{data:function(){return{label:t,isNew:n}}}}).result.then((function(t){!function(t){e.setLoader(!0,p.instant("autocomplete.update"));let n=t.labelIri.toString();if(n=l.expandPrefix(n,e.namespaces),l.isValidIri(t,n)&&""!==n)t.labelIri=n,d.addLabelConfig(t).success((function(){v(),L()})).error((function(e){o.error(getError(e))})).finally((function(){e.setLoader(!1)}));else{const n=Object(r.decodeHTML)(p.instant("not.valid.iri",{value:t.labelIri.toString()}));o.error(n),e.setLoader(!1)}}(t)}))},e.removeLabel=function(t){!function(t){e.setLoader(!0,p.instant("autocomplete.update")),d.removeLabelConfig(t).success((function(){v(),L()})).error((function(e){o.error(getError(e))})).finally((function(){e.setLoader(!1)}))}(t)},e.$on("repositoryIsSet",(function(){m(),c.isLicenseValid()&&i.getActiveRepository()&&!i.isActiveRepoOntopType()&&!i.isActiveRepoFedXType()&&(e.checkForPlugin(),R())}));const h=()=>{u.getNamespaces(i.getActiveRepository()).then(n.mapNamespacesResponse).then(t=>{e.namespaces=t}).catch(e=>{const t=getError(e);o.error(t,p.instant("error.getting.namespaces.for.repo"))})};c.isLicenseValid()&&i.getActiveRepository()&&!i.isActiveRepoOntopType()&&!i.isActiveRepoFedXType()&&(e.checkForPlugin(),R())}function c(e,t,o,n){e.label=_.cloneDeep(n.label),e.isNew=n.isNew,e.ok=function(){e.form.$valid&&t.close(e.label)},e.cancel=function(){t.dismiss("cancel")},e.setTemplate=function(t){e.label.labelIri=t,o((function(){$("#wb-autocomplete-languages").focus()}),0)}}angular.module("graphdb.framework.autocomplete.controllers",["toastr","graphdb.framework.rest.autocomplete.service"]).controller("AutocompleteCtrl",i).controller("AddLabelCtrl",c),i.$inject=["$scope","$interval","toastr","$repositories","$licenseService","$uibModal","$timeout","RDF4JRepositoriesRestService","UriUtils","AutocompleteRestService","$autocompleteStatus","$translate"],c.$inject=["$scope","$uibModalInstance","$timeout","data"]}}]);