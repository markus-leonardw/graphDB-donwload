(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{63:function(e,t,s){"use strict";s.r(t),s.d(t,"ACListModel",(function(){return c})),s.d(t,"ACRuleModel",(function(){return l})),s.d(t,"ACL_POLICY",(function(){return i}));class c{constructor(e=[]){this._aclRules=e}size(){return this.aclRules.length}appendNewRule(e,t,s,c,i,u){this.aclRules.push(new l(e,t,s,c,i,u))}addRule(e){this.aclRules.splice(e,0,new l)}removeRule(e){this.aclRules.splice(e,1)}replaceRule(e,t){this.aclRules.splice(e,1,t)}getRule(e){return this.aclRules[e]}isRuleDuplicated(e){const t=this.aclRules[e];return this.aclRules.some((s,c)=>e!==c&&angular.equals(t,s))}getRuleCopy(e){const t=this.aclRules[e];return{subject:t.subject,predicate:t.predicate,object:t.object,context:t.context,role:t.role,policy:t.policy}}moveUp(e){const t=this.aclRules[e-1];this.aclRules[e-1]=this.aclRules[e],this.aclRules[e]=t}moveDown(e){const t=this.aclRules[e+1];this.aclRules[e+1]=this.aclRules[e],this.aclRules[e]=t}toJSON(){return this.aclRules.map(e=>({subject:e.subject,predicate:e.predicate,object:e.object,context:e.context,role:e.role,policy:e.policy}))}get aclRules(){return this._aclRules}set aclRules(e){this._aclRules=e}}class l{constructor(e="*",t="*",s="*",c="*",l="CUSTOM_",u=i.ALLOW){this._subject=e,this._predicate=t,this._object=s,this._context=c,this._role=l,this._policy=u}get subject(){return this._subject}set subject(e){this._subject=e}get predicate(){return this._predicate}set predicate(e){this._predicate=e}get object(){return this._object}set object(e){this._object=e}get context(){return this._context}set context(e){this._context=e}get role(){return this._role}set role(e){this._role=e}get policy(){return this._policy}set policy(e){this._policy=e}}const i={ALLOW:"allow",DENY:"deny"}}}]);